diff --git a/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecMFC.cpp b/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecMFC.cpp
index 4cbdbbe..e176ee7 100644
--- a/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecMFC.cpp
+++ b/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecMFC.cpp
@@ -400,6 +400,16 @@ bool CDVDVideoCodecMFC::Open(CDVDStreamInfo &hints, CDVDCodecOptions &options) {
   m_videoBuffer.iWidth          = resultVideoWidth;
   m_videoBuffer.iHeight         = resultVideoHeight;
 
+  if (m_hints.aspect > 0.0 && !m_hints.forced_aspect)
+  {
+    m_videoBuffer.iDisplayWidth  = ((int)lrint(m_videoBuffer.iHeight * m_hints.aspect)) & -3;
+    if (m_videoBuffer.iDisplayWidth > m_videoBuffer.iWidth)
+    {
+      m_videoBuffer.iDisplayWidth  = m_videoBuffer.iWidth;
+      m_videoBuffer.iDisplayHeight = ((int)lrint(m_videoBuffer.iWidth / m_hints.aspect)) & -3;
+    }
+  }
+
   m_videoBuffer.data[0]         = NULL;
   m_videoBuffer.data[1]         = NULL;
   m_videoBuffer.data[2]         = NULL;
--- a/xbmc/windowing/X11/WinSystemX11.cpp	2015-07-19 20:42:23.000000000 +0000
+++ b/xbmc/windowing/X11/WinSystemX11.cpp.new	2015-07-21 19:41:21.447550815 +0000
@@ -497,6 +497,7 @@
   EGLint attributes[] =
   {
     EGL_DEPTH_SIZE, 24,
+    EGL_CONFIG_ID, 1,
     EGL_NONE
   };
   EGLint numConfigs;
@@ -521,6 +522,11 @@ EGLConfig getEGLConfig(EGLDisplay eglDisplay, XVisualInfo *vInfo)
   for (EGLint i = 0;i < numConfigs;++i)
   {
     EGLint value;
+    eglGetConfigAttrib(eglDisplay, eglConfigs[i], EGL_CONFIG_ID, &value);
+    if(value != 1) {
+		CLog::Log(LOGERROR, "Mali: This isn't CONFIG_ID 1, this is CONFIG_ID %d", value);
+		break;
+	}
     if (!eglGetConfigAttrib(eglDisplay, eglConfigs[i], EGL_NATIVE_VISUAL_ID, &value))
     {
       CLog::Log(LOGERROR, "Failed to query EGL_NATIVE_VISUAL_ID for egl config.");
